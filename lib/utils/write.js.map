{"version":3,"sources":["../../src/utils/write.js"],"names":["write","filepath","contents","writeFile","err","dirname"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AACA;AACA;kBACe,eAAeA,KAAf,CAAsBC,QAAtB,CAA+B,aAA/B,EAA8CC,QAA9C,CAAuD,oBAAvD,EAA6E;AAC1F,MAAI;AACF,UAAM,oBAAK,aAAGC,SAAR,EAAmBF,QAAnB,EAA6BC,QAA7B,CAAN;AACA;AACD,GAHD,CAGE,OAAOE,GAAP,EAAY;AACZ;AACA,UAAM,mBAAM,eAAKC,OAAL,CAAaJ,QAAb,CAAN,CAAN;AACA,UAAM,oBAAK,aAAGE,SAAR,EAAmBF,QAAnB,EAA6BC,QAA7B,CAAN;AACA;AACD;AACF,C","file":"write.js","sourcesContent":["//@flow\nimport path from 'path'\nimport pify from 'pify'\nimport {mkdir} from './mkdirs'\nimport fs from 'fs'\n// An async writeFile variant that automatically creates missing directories,\n// and returns null instead of throwing errors.\nexport default async function write (filepath /*: string */, contents /*: string|Buffer */) {\n  try {\n    await pify(fs.writeFile)(filepath, contents)\n    return\n  } catch (err) {\n    // Hmm. Let's try mkdirp and try again.\n    await mkdir(path.dirname(filepath))\n    await pify(fs.writeFile)(filepath, contents)\n    return\n  }\n}\n\n"]}