{"version":3,"sources":["../../src/models/GitConfig.js"],"names":["GitConfig","constructor","dir","root","path","parse","ini","text","readFile","encoding","decode","get"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEe,MAAMA,SAAN,CAAgB;AAC7BC,cAAaC,GAAb,EAAkB;AAChB,SAAKC,IAAL,GAAYD,GAAZ;AACA,SAAKE,IAAL,GAAYF,MAAM,cAAlB;AACD;AACD,QAAMG,KAAN,GAAe;AACb,QAAI,KAAKC,GAAT,EAAc;AACd,QAAIC,OAAO,MAAM,oBAAK,aAAGC,QAAR,EAAkB,KAAKJ,IAAvB,EAA6B,EAACK,UAAU,MAAX,EAA7B,CAAjB;AACA,SAAKH,GAAL,GAAW,cAAII,MAAJ,CAAWH,IAAX,CAAX;AACD;AACD,QAAMI,GAAN,CAAWP,IAAX,EAAiB;AACf,UAAM,KAAKC,KAAL,EAAN;AACA,WAAO,sBAAI,KAAKC,GAAT,EAAcF,IAAd,CAAP;AACD;AAb4B;kBAAVJ,S","file":"GitConfig.js","sourcesContent":["import fs from 'fs'\nimport pify from 'pify'\nimport ini from 'ini'\nimport get from 'lodash.get'\n\nexport default class GitConfig {\n  constructor (dir) {\n    this.root = dir\n    this.path = dir + '/.git/config'\n  }\n  async parse () {\n    if (this.ini) return\n    let text = await pify(fs.readFile)(this.path, {encoding: 'utf8'})\n    this.ini = ini.decode(text)\n  }\n  async get (path) {\n    await this.parse()\n    return get(this.ini, path)\n  }\n}"]}